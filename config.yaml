Version: 0                                                 # mandatory, version is always 0 (reserved for later use)
LogConfig: True                                            # optional, default False, outputs the configuration including defaults on startup
LogWorkerStart: True                                       # optional, default False, write log for starting / stoping of workers
LogMqttDebug: True                                         # optional, default False, enable debug output of the mqtt module
ProjectTitle: go-webcam Development Project                # optional: default go-webcam

HttpServer: # optional, default Disabled, start the http server
  Bind: 0.0.0.0                                            # optional, default ::1 (ipv6 loopback)
  Port: 8043                                               # optional, default 8043
  LogRequests: True                                        # optional, default False, log all requests to stdout
  EnableDocs : True                                        # optional: default False
  ProxyFrontend: "http://localhost:8080/"                  # optional: default deactivated; otherwise an address of the frontend dev-server

Cameras:
  0-cam-east:
    Address: 192.168.8.63
    User: ubnt
    Password: gDtDFhjUfcYQthKQX7zN
    RefreshInterval: 5s

  1-cam-north:
    Address: 192.168.8.64
    User: ubnto
    Password: gDtDFhjUfcYQthKQX7zN
    RefreshInterval: 1500ms

Views: # mandatory, a list of Views that shall be available
  public:
    Route: /
    Cameras:
      - 0-cam-east
    ResolutionMaxWidth: 1024
    ResolutionMaxHeight: 768
    RefreshInterval: 5s
  private:
    Route: /private/
    Cameras:
      - 0-cam-east
      - 1-cam-north
    Htaccess:
      - "user:password"
    RefreshInterval: 20s

#MqttClients:                                               # mandatory, a list of MQTT servers to connect to
#  1-local-mosquitto:                                       # optional, a second MQTT erver
#    Broker: "tcp://172.17.0.2:1883"                         # optional, the second MQTT servers broker...

